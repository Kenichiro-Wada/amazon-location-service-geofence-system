{
	"name": "${localWorkspaceFolderBasename}",

	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"[typescript]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode" // フォーマッタをprettierに指定
		},
		"editor.formatOnSave": true, // ファイル保存時にPrettierでフォーマット
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": true // ファイル保存時にESLintでフォーマット
		}
	},

	// // Add the IDs of extensions you want installed when the container is created.
	// "extensions": [
	// 	"dbaeumer.vscode-eslint"
	// ],

	// Mount ~/.aws directory for AWS Amplify CLI and AWS CLI access
	"mounts": [
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/root/.aws,type=bind,consistency=cached"
	],

	// Use in-container folder (not mounted host directory) as a workspace to speeeeeeed-up the `npx create-react-app` command. See https://github.com/toricls/aws-amplify-sns-workshop-in-vscode/pull/3.
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspaces,type=bind,consistency=cached",
	"workspaceFolder": "/workspaces",
	"containerEnv": { 
		"MOUNTED_HOST_DIR": "${localWorkspaceFolder}",
		"MOUNTED_HOST_DIR_PATH_IN_CONTAINER": "/workspaces"
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3000,20002],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install -g aws-cdk",

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "node"
}
